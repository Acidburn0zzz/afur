#!/usr/bin/env php
<?php
include_once ('../config/config.inc.php');
include_once ($conf['lib'] . '/DB.class.php');

$db = new DB($conf['db_dsn'], $conf['db_user'], $conf['db_passwd']);

//pas de group by, réutilisation ensuite selon arch
$sql = 'select id,name from packages order by name;';
$packages = $db->fetch_all ($sql, null);
//var_dump($packages);

//AurJson
$json_url = "https://aur.archlinux.org/rpc.php?type=multiinfo";
foreach ($packages as $index => $pkg) {
	$json_url.="&arg[]=".$pkg['name'];
}
// Initializing curl
$ch = curl_init( $json_url );
$options = array(CURLOPT_RETURNTRANSFER => true,);
curl_setopt_array( $ch, $options );
$result =  json_decode(curl_exec($ch), true);
//var_dump($result);

//Mise à jour table pkg_aur
foreach ($result['results'] as $aur_pkg) {
	//var_dump($aur_pkg);
	$index=0;//index dans $packages
	$name=$aur_pkg['Name'];
	$version=$aur_pkg['Version'];
	$found = false;//paquet trouvé dans $packages
	$next = false;//stopper parcours liste ordonnée
	for (;$index < count($packages);$index++) {
		if ($found && $next) {
			$index--;
			break;
		}
		if (strcmp($packages[$index]['name'],$name) == 0) {
			$found = true;
			$sql = "insert into pkg_aur (pkg_id,name,version) values (?,?,?) on duplicate key update version=?;";
			$params = array($packages[$index]['id'], $name, $version, $version);
			$db->execute ($sql, $params);
		} else {
			if ($found) //vérifier les deux architectures si présentes
				$next = true;
		}
	}
}

?>
